name: CI
on: [push, pull_request]

env:
  CI: "ON"
  HOMEBREW_NO_ANALYTICS: "ON"
  HOMEBREW_NO_AUTO_UPDATE: "ON"
  HOMEBREW_NO_BOTTLE_SOURCE_FALLBACK: "ON"
  HOMEBREW_NO_GITHUB_API: "ON"
  HOMEBREW_NO_INSTALL_CLEANUP: "ON"

jobs:
  gcc-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        version: [10]  # Extend to 11, 12, 13

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install GCC (OSX)
      if: ${{ contains(matrix.os, 'macos') }}
      run: |
        brew install gcc@${{ matrix.version }} openblas pkg-config
        ln -s /usr/local/bin/gfortran-${{ matrix.version }} /usr/local/bin/gfortran
        ln -s /usr/local/bin/gcc-${{ matrix.version }} /usr/local/bin/gcc
        ln -s /usr/local/bin/g++-${{ matrix.version }} /usr/local/bin/g++
        echo "PKG_CONFIG_PATH=/usr/local/opt/openblas/lib/pkgconfig" >> $GITHUB_ENV
        xcversion select 14.1

    - name: Install GCC (Linux)
      if: ${{ contains(matrix.os, 'ubuntu') }}
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get update
        sudo apt-get install -y gcc-${{ matrix.version}} gfortran-${{ matrix.version }} g++-${{ matrix.version }}
        sudo apt-get install -y libblas-dev liblapack-dev
        sudo update-alternatives \
          --install /usr/bin/gcc gcc /usr/bin/gcc-${{ matrix.version }} 100 \
          --slave /usr/bin/gfortran gfortran /usr/bin/gfortran-${{ matrix.version }} \
          --slave /usr/bin/g++ g++ /usr/bin/g++-${{ matrix.version }} \
          --slave /usr/bin/gcov gcov /usr/bin/gcov-${{ matrix.version }}

    - name: Set Compiler (Linux)
      if: contains(matrix.os, 'ubuntu')
      run: |
        echo "FC=gfortran" >> $GITHUB_ENV
        echo "CC=gcc" >> $GITHUB_ENV
        echo "CXX=g++" >> $GITHUB_ENV

    - name: Set Compiler (OSX)
      if: contains(matrix.os, 'macos')
      run: |
        echo "FC=gfortran-${{ matrix.version }}" >> $GITHUB_ENV
        echo "CC=gcc-${{ matrix.version }}" >> $GITHUB_ENV
        echo "CXX=g++-${{ matrix.version }}" >> $GITHUB_ENV

    - name: Build project (Linux)
      run: gfortran blas_interface_test.f90 -lblas -llapack -o test.x

    - name: Build project (Mac)
      run: gfortran blas_interface_test.f90 -lopenblas -o test.x


#  intel-build:
#    runs-on: ${{ matrix.os }}
#    strategy:
#      fail-fast: false
#      matrix:
#        os: [ubuntu-latest]
#        fc: [ifx]
#        cc: [icx]
#    env:
#      FC: ${{ matrix.fc }}
#      CC: ${{ matrix.cc }}
#      APT_PACKAGES: >-
#        intel-oneapi-compiler-fortran
#        intel-oneapi-compiler-dpcpp-cpp
#        intel-oneapi-mkl
#        intel-oneapi-mkl-devel
#
#    steps:
#    - name: Checkout code
#      uses: actions/checkout@v3
#
#    - name: Add Intel repository
#      if: contains(matrix.os, 'ubuntu')
#      run: |
#        wget -O- https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB | gpg --dearmor | sudo tee /usr/share/keyrings/oneapi-archive-keyring.gpg > /dev/null
#        echo "deb [signed-by=/usr/share/keyrings/oneapi-archive-keyring.gpg] https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
#        sudo apt-get update
#
#    - name: Install Intel oneAPI compiler
#      if: contains(matrix.os, 'ubuntu')
#      run: |
#        sudo apt-get update
#        sudo apt-get install ${APT_PACKAGES}
#        source /opt/intel/oneapi/setvars.sh
#        printenv >> $GITHUB_ENV

    # TODO(Alex) Link to MKL
#    - name: Build project
#      run: ifx blas_interface_test.f90 -lblas -llapack -o test.x